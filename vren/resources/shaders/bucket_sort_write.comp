#version 460

#extension GL_EXT_shader_16bit_storage : require

#extension GL_EXT_debug_printf : enable

#ifndef VREN_WORKGROUP_SIZE
#	define VREN_WORKGROUP_SIZE 1024
#endif

layout(local_size_x = VREN_WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

#define VREN_MAX_ITERS 1

#define VREN_KEY_SIZE (1 << 16)
#define VREN_KEY_MASK (VREN_KEY_SIZE - 1)

layout(push_constant) uniform PushConstants
{
	uint num_items;
};

layout(set = 0, binding = 0) readonly buffer InputBuffer
{
	uvec2 input_buffer[];
};

layout(set = 0, binding = 1) writeonly buffer OutputBuffer
{
	uvec2 output_buffer[];
};

layout(set = 0, binding = 2) buffer BucketOffsetBuffer
{
	uint bucket_offsets[VREN_KEY_SIZE];
};

void main()
{
	for (uint i = 0; i < num_items; i++)
	{
		uvec2 v = input_buffer[gl_GlobalInvocationID.x * num_items + i];
		uint offset = atomicAdd(bucket_offsets[v.x & VREN_KEY_MASK], 1);
		output_buffer[offset] = v;
	}
}
