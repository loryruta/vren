#version 460

#extension GL_KHR_vulkan_glsl : require
#extension GL_GOOGLE_include_directive : require

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

#define MAX_ITER_X 2
#define MAX_ITER_Y 2

// gBuffer
layout(set = 0, binding = 0, rgba32f) uniform image2D gbuffer_positions;
layout(set = 0, binding = 1, rgba16f) uniform image2D gbuffer_normals;
layout(set = 0, binding = 2, rg16f)   uniform image2D gbuffer_texcoords;
layout(set = 0, binding = 3, r16ui)   uniform image2D gbuffer_material_indices;

void main()
{
	ivec2 gbuffer_size = imageSize(gbuffer_positions);

	for (uint x = gl_GlobalInvocationID.x * MAX_ITER_X; x < (gl_GlobalInvocationID.x + 1) * MAX_ITER_X; x++)
	{
		for (uint y = gl_GlobalInvocationID.y * MAX_ITER_Y; y < (gl_GlobalInvocationID.y + 1) * MAX_ITER_Y; y++)
		{
			if (x < gbuffer_size.x && y < gbuffer_size.y)
			{
				// TODO
			}
		}
	}
}
